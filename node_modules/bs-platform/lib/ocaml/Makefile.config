# generated by ./configure -prefix /home/elliot/GitHub/Hiver/node_modules/bs-platform -no-ocamldoc -no-ocamlbuild -no-shared-libs -no-curses -no-graph -no-pthread -no-debugger
PREFIX=/home/elliot/GitHub/Hiver/node_modules/bs-platform
BINDIR=$(PREFIX)/bin
LIBDIR=$(PREFIX)/lib/ocaml
STUBLIBDIR=$(LIBDIR)/stublibs
MANDIR=$(PREFIX)/man
MANEXT=1
RANLIB=ranlib
RANLIBCMD=ranlib
ARCMD=ar
SHARPBANGSCRIPTS=true
UNIX_OR_WIN32=unix
UNIXLIB=unix
GRAPHLIB=graph
BNG_ARCH=amd64
BNG_ASM_LEVEL=1
PTHREAD_LINK=
PTHREAD_CAML_LINK=
X11_INCLUDES=
X11_LINK=-lX11
LIBBFD_LINK=
BYTECC=gcc
BYTECCCOMPOPTS=-O -fno-defer-pop -Wall -D_FILE_OFFSET_BITS=64
BYTECCLINKOPTS=
BYTECCLIBS= -lm  -ldl  
BYTECCRPATH=
EXE=
SUPPORTS_SHARED_LIBRARIES=false
SHAREDCCCOMPOPTS=-O 
MKSHAREDLIBRPATH=
NATDYNLINKOPTS=
SYSLIB=-l$(1)
#ml let syslib x = "-l"^x;;

### How to build a static library
MKLIB=ar rc $(1) $(2); ranlib $(1)
#ml let mklib out files opts = Printf.sprintf "ar rc %s %s %s; ranlib %s" out opts files out;;
ARCH=amd64
MODEL=default
SYSTEM=linux
NATIVECC=gcc
NATIVECCCOMPOPTS=-O -Wall -D_FILE_OFFSET_BITS=64
NATIVECCPROFOPTS=-O -Wall -D_FILE_OFFSET_BITS=64
NATIVECCLINKOPTS=
NATIVECCRPATH=
NATIVECCLIBS= -lm  -ldl
ASM=as
ASPP=gcc -c
ASPPPROFFLAGS=-DPROFILING
PROFILING=prof
DYNLINKOPTS= -ldl
OTHERLIBRARIES=unix str num dynlink bigarray threads
CC_PROFILE=-pg
SYSTHREAD_SUPPORT=false
PARTIALLD=ld -r
PACKLD=$(PARTIALLD) $(NATIVECCLINKOPTS) -o\ 
DLLCCCOMPOPTS=
IFLEXDIR=
O=o
A=a
SO=so
EXT_OBJ=.o
EXT_ASM=.s
EXT_LIB=.a
EXT_DLL=.so
EXTRALIBS=
CCOMPTYPE=cc
TOOLCHAIN=cc
NATDYNLINK=false
CMXS=cmxa
MKEXE=$(BYTECC)
MKEXEDEBUGFLAG=-g
MKDLL=
MKMAINDLL=
RUNTIMED=noruntimed
SHARED=noshared
WITH_DEBUGGER=
WITH_OCAMLDOC=
WITH_OCAMLBUILD=
ASM_CFI_SUPPORTED=true
WITH_FRAME_POINTERS=false
TARGET=x86_64-unknown-linux-gnu
HOST=x86_64-unknown-linux-gnu
